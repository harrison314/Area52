@page "/Management/PredefinedQueries"
@using Area52.Shared.ForManagement
@using Area52.Services.Contracts
@inject IUserPrefernceServices UserPrefernceServices

<PageTitle>Predefined queries</PageTitle>

<LeftMenu Title="Predefined queries">
    @if (this.queries == null)
    {
        <LoadingIndicator />
    }
    else
    {
        <table class="table table-responsive-sm">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Query</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < this.queries.Count; i++)
                {
                    int index = i;
                    <tr @key="@($"{index}-{this.queries[index].Name}")">
                        <td>
                            @this.queries[index].Name
                        </td>
                        <td>
                            <pre>@this.queries[index].Query</pre>
                        </td>
                        <td>
                            <button type="button"
                            class="btn btn-sm btn-outline-secondary"
                            @onclick="@(e=>this.DeleteQuery(index))">
                                <span class="fa fa-remove"></span>
                                Delete
                            </button>
                        </td>
                    </tr>
                }


            </tbody>
        </table>

        <div class="row g-3 align-items-center">

            <div class="col-3">
                <input type="text" class="form-control" autocomplete="off" placeholder="Name" @bind="this.name" />
            </div>
            <div class="col-8">
                <input type="text" class="form-control" autocomplete="off" placeholder="Query" @bind="this.query" />
            </div>
            <div class="col-auto">
                <button type="button"
                    class="btn btn-sm btn-success"
                    @onclick="this.StoreNewQuery">
                    <span class="fa fa-save"></span>
                    Store
                </button>
            </div>
        </div>
    }
</LeftMenu>

@code {
    private IReadOnlyList<SturedQuery>? queries = null;
    private string name = string.Empty;
    private string query = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        this.queries = await this.UserPrefernceServices.GetQueries(default);
    }

    private async Task StoreNewQuery()
    {
        if (!this.IsDataValid())
        {
            return;
        }

        List<SturedQuery> localQueries = new List<SturedQuery>(this.queries!);
        localQueries.Add(new SturedQuery(this.name.Trim(), this.query.Trim()));

        await this.UserPrefernceServices.SaveQueries(localQueries, default);

        
        this.queries = await this.UserPrefernceServices.GetQueries(default);
        this.name = string.Empty;
        this.query = string.Empty;
    }

    private async Task DeleteQuery(int index)
    {
        List<SturedQuery> localQueries = new List<SturedQuery>(this.queries!);
        localQueries.RemoveAt(index);

        await this.UserPrefernceServices.SaveQueries(localQueries, default);
        this.queries = await this.UserPrefernceServices.GetQueries(default);
    }

    private bool IsDataValid()
    {
        if (string.IsNullOrWhiteSpace(this.name))
        {
            return false;
        }

        if (string.IsNullOrWhiteSpace(this.query))
        {
            return false;
        }

        try
        {
            Area52.Services.Implementation.QueryParser.Parser.SimpleParse(this.query);
            return true;
        }
        catch
        {
            return false;
        }
    }
}